Description: Fix enums at i386, armhf and armel.
 Larget integer values need on those 32-bit platforms
 more elements in the PyLongObject's ob_digit array than the type
 definition allocates by default.
 Therefore using enums with a large integer or pointers
 lead to a overflow and overwrite the following name pointer.

Bug: https://github.com/boostorg/python/issues/312
Bug-Debian: https://bugs.debian.org/1009739
Forwarded: no
Author: Bernhard Ãœbelacker <bernhardu@mailbox.org>
Last-Update: 2022-06-01

--- boost1.74-1.74.0.orig/libs/python/src/object/enum.cpp
+++ boost1.74-1.74.0/libs/python/src/object/enum.cpp
@@ -23,6 +23,12 @@ struct enum_object
 #else
     PyIntObject base_object;
 #endif
+#if defined(__i386__) || defined(__ARMEL__)
+    /* Debian Bug #1009739:
+       A value with the second highest bit set overflows the PyLongObject's ob_digit with default size of 1 element.
+    */
+    char dummy[4];
+#endif
     PyObject* name;
 };
 
